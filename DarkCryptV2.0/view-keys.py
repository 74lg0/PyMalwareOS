import base64
from cryptography.hazmat.primitives.asymmetric import rsa, padding
from cryptography.hazmat.primitives import hashes, serialization
from colorama import Fore, init

init(autoreset=True)
line = '-' * 20
line2 = '-' * 9
line3 = '-'*45
line4 = '-'*24

def decoder(key):
    # Decodifica la clave de Base64 a bytes
    key_bytes = base64.urlsafe_b64decode(key)
    return key_bytes

def load_private_key():
    # Cargar la clave privada desde el archivo PEM
    with open('private_key.pem', 'rb') as key_file:
        private_key = serialization.load_pem_private_key(
            key_file.read(),
            password=None  # Sin contraseña ya que se guardó sin cifrar
        )
    return private_key

def decrypt_with_private_key(encrypted_data, private_key):
    # Desencriptar los datos con la clave privada
    decrypted_data = private_key.decrypt(
        encrypted_data,
        padding.OAEP(
            mgf=padding.MGF1(algorithm=hashes.SHA256()),
            algorithm=hashes.SHA256(),
            label=None
        )
    )
    return decrypted_data

with open('keys.txt', 'r') as archivo:
    print(f"""{Fore.GREEN+line}[Key]{line}|{Fore.BLUE+line2}[Date]{line2}|""")
    private_key = load_private_key()

    # Itera sobre cada línea en el archivo
    for linea in archivo:
        # Divide la línea en dos partes usando ":" como delimitador
        data = linea.split(':', 1)  # El "1" asegura que solo se divide en la primera aparición de ":"
        
        # Parte antes del ":"
        key = data[0].strip()  # Elimina espacios en blanco si los hay
        
        # Parte después del ":"
        date = data[1].strip() if len(data) > 1 else ''  # Evita error si no hay ":"

        # Decodificar y desencriptar la clave
        decode_key = decoder(key)
        decrypted_text = decrypt_with_private_key(decode_key, private_key)
        
        print(f"""
{Fore.GREEN+decrypted_text.decode('utf-8')} |   {Fore.BLUE+date}   |
{Fore.GREEN+line3}|{Fore.BLUE+line4}|
""")